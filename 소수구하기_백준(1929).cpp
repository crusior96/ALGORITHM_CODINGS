#include<iostream>
using namespace std;

//100만 이하의 정수인 N과 M 두 정수의 값을 입력받았을 때 [단, N<M]
//두 정수 사이에 소수가 있다면, 모든 소수의 값을 출력하라.

int primary[1000001] = {};
//최악의 경우 100만까지의 숫자들 중 소수의 유무 여부를 따져야하기 때문에
//2에서 100만까지 소수가 무엇이 있는지 알아내어, i 가 소수라면 primary[i]에 0, 아니라면 primary[i]에 1을 저장시켜둔다.


int main()
{
	//아르키메데스의 체 알고리즘을 사용하여 소수들을 구한다.
	//이때, num까지의 숫자들 중 모든 값들을 나눠볼 필요없이 sqrt(num)까지의 숫자들로만 나눠보면 되기에
	//sqrt(1000000), 즉 1000까지의 숫자들로만 소수를 구해낸다.
	primary[1] = 1; //1은 소수가 아니기 때문에 미리 1을 넣는다.
	for (int i = 2;i <= 1000;i++)
	{
		//이미 소수가 아닌 값으로 판정된 숫자는 for문을 넘긴다.
		if (primary[i] == 1)
		{
			continue;
		}
		for (int j = i + i;j <= 1000000;j += i)
		{
		//소수인 값이라면, 100만까지의 숫자들 중 이 소수와 배수인 값들을 찾아낸다.
			primary[j] = 1;
		}
	}
	int N, M;
	cin >> N >> M;
	for (int i = N;i <= M;i++)
	{
		if (primary[i] == 0)
		{
			//원래는 cout에 endl을 사용했었으나
			//printf와 \n이 각각의 출력방식보다 엄청난 시간절약을 제공해주었다.
			printf("%d\n", i);
		}
	}

	return 0;
}